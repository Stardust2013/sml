# Copyright (c) 2014-2018 Kartik Kumar (me@kartikkumar.com)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp

sudo: false

compiler:
  - gcc
  - clang

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "nut95kD3K/P8VhKDNVvw/Gy8nv1Lr4DPhz5P9EwYWC1NZuHJKbcjxBea+1Lqo67KgO1Rsxg5fbGnI1m/uH5lDcaNDfj3D9R62i779MBfCPFKhrq1mOjizdgjrPhj11xFwSoNE02hY+ii3YjgMld2cvRG+/6QeehRtN1X3w4v60V56icNfhz0+mU7HL5pUn9rN7h4uUOApeu9YER9sLmKbWReGR6R+3d6+o6kCK0bY1PzDOyX9yrFJLsPSQI+vL0dBwv8hdhLVpg0zn/jCCFTxi3agQS7OMbBqTGygmWU9UnhI7064FRf/Iu258hLzVBIHUyRWVjb3sKfuI1At0IvP2RUK/f2RPkKjHvMihNRPR7idI5ikjmpHZuwHFSkflDUzWK54ejFyYLL2y8qzR70GlObqGP3Lt/Q187TlnxYqQ+ncfyJYZYhaNdxFouUoyAt/MNEqp1iljq8p0Roi22vYgZsF4ONl6/PzPo3pK6s2BDCumq/uDVA2F/nJ28Ea8h/g4Euo+xTwtPOfNa1H/RJrUZv/vFFsSI6d8S1KPShBLq3WC371T+724MFEHZpa0/QjK5saU4Ja4Qz/EH+ChDoZpfvlaHh0MPivHIZ+1rFiSRz5gb0v4UjJExhwguXAEAmSEgcSViTBrrx2QyRBNuptVBHMnRDftc4xvxFkv/egEc="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  apt:
    packages:
      - texlive
      - graphviz
      - ghostscript
      - mscgen
  coverity_scan:
    project:
      name: "kartikkumar/sml"
      description: "Build submitted via Travis CI"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on .."
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  - bash scripts/install_cmake.sh
  - bash scripts/install_doxygen.sh
  - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      pip install --user cpp-coveralls;
    fi

before_script::
  - ls -R $HOME/cmake
  - ls -R $HOME/doxygen

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi
